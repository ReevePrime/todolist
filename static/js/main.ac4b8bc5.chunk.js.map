{"version":3,"sources":["SubmitButton.js","Todos.js","List.js","App.js","reportWebVitals.js","index.js"],"names":["SubmitButton","props","state","task","id","uuidv4","handleChange","bind","submitHandle","evt","this","setState","target","name","value","e","preventDefault","createTodo","className","onSubmit","action","htmlFor","type","onChange","required","placeholder","Button","variant","size","onClick","Component","Todos","active","edit","handleDelete","handleClick","handleEdit","currentState","deleteTodo","stopPropagation","updateTodo","stateLength","icon","faPen","faTrashAlt","List","todos","newTodo","filter","tasks","updatedTask","updatedTodo","map","todo","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac4b8bc5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport \"./SubmitButton.css\";\nimport Button from 'react-bootstrap/Button';\n\n\nclass SubmitButton extends Component {\n    constructor(props){\n    super(props);\n    this.handleChange=this.handleChange.bind(this);\n    this.submitHandle=this.submitHandle.bind(this);\n    }\n\n    state = { \n        task: \"\",\n        id: uuidv4()\n     }\n     handleChange(evt) {\n       this.setState({[evt.target.name] : evt.target.value})\n     }\n\n    submitHandle(e) {\n        e.preventDefault();\n        this.props.createTodo(this.state);\n        this.setState({task : \"\", id: uuidv4()})\n    }\n    render() { \n        return ( \n        <div className=\"Form-container\">\n           <form onSubmit={this.submitHandle} action=\"\">\n                <label htmlFor=\"newtask\"></label>\n                <input type=\"text\" \n                value={this.state.task} \n                name=\"task\" \n                onChange={this.handleChange} \n                required \n                id=\"newtask\" \n                placeholder=\"Enter new task\"/>\n            </form>\n            <Button variant=\"primary\" className=\"Submit-btn\" size=\"sm\" onClick={this.submitHandle}>Submit</Button>\n            \n            \n        </div> );\n    }\n}\n \nexport default SubmitButton;","import React, { Component } from 'react';\nimport \"./Todos.css\";\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPen } from '@fortawesome/free-solid-svg-icons'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\nclass Todos extends Component {\n    constructor(props) {\n    super(props);\n    this.state = {\n        active: false,\n        edit: false,\n        task: \"\"\n    }\n    this.handleDelete=this.handleDelete.bind(this);\n    this.handleClick=this.handleClick.bind(this);\n    this.handleEdit=this.handleEdit.bind(this);\n    this.handleChange=this.handleChange.bind(this);\n}\n\n    handleClick() {\n        const currentState = this.state.active;\n        this.setState({ active: !currentState });\n    }\n\n    handleDelete() {\n        this.props.deleteTodo(this.props.id);\n    }\n\n    handleChange(e) {\n        this.setState({[e.target.name] : e.target.value})\n    }\n\n    handleEdit(e) {\n        e.stopPropagation();\n        this.setState({task: this.props.task})\n        this.props.updateTodo(this.props.id, this.state.task)\n        const currentState = this.state.edit;\n        this.setState({ edit: !currentState})\n    }\n\n    \n    render() {\n        return (\n                this.props.stateLength === 1 && this.props.task === \"\" ? \n                    <div className=\"emptylist\"><br/>Your task list is empty</div> \n                    : this.state.edit === true ? \n                    <form className=\"space\" onSubmit={this.handleEdit} action=\"\" >\n                        <input type=\"text\" \n                        name=\"task\" \n                        value={this.state.task} \n                        required\n                        onChange={this.handleChange}/> <button>Submit</button>\n                        </form>\n                        : <li \n                            className={this.state.active ? \"Todos-items space\": \"space\"}  \n                            onClick={this.handleClick}\n                            >{this.props.task} \n            {this.props.task === \"\" ? null : \n                <div className=\"libtn\">\n                    <Button size=\"sm\" variant=\"outline-secondary\" onClick={this.handleEdit}><FontAwesomeIcon icon={faPen} /></Button>\n                    <Button size=\"sm\" variant=\"outline-danger\" onClick={this.handleDelete}><FontAwesomeIcon icon={faTrashAlt} /></Button>\n                    </div>}</li>\n    )}\n}\n \nexport default Todos;\n","import React, { Component } from 'react';\nimport SubmitButton from './SubmitButton';\nimport Todos from \"./Todos\";\nimport \"./List.css\";\n\n\nclass List extends Component {\n    constructor(props) {\n        super(props);\n        this.createTodo=this.createTodo.bind(this);\n        this.deleteTodo=this.deleteTodo.bind(this);\n        this.updateTodo=this.updateTodo.bind(this);\n    }\n    state = {\n        todos: [{task: \"\"}] \n      }\n\n        createTodo(newTodo) {\n            this.setState({\n            todos: [...this.state.todos, newTodo]\n            });\n        }\n\n        deleteTodo(id) {\n            this.setState({\n                todos: this.state.todos.filter(tasks => tasks.id !== id )})\n        }\n\n        updateTodo(id, updatedTask) {\n            const updatedTodo = this.state.todos.map(todo => {\n                if (todo.id === id) {\n                    return {...todo, task: updatedTask}\n                }\n                return todo;\n            })\n            this.setState({todos: updatedTodo})\n        }\n\n\n        render() { \n\n            \n            // Render all the tasks in the state in separate <li> elements\n        const tasks = this.state.todos.map(todo => {\n            return <Todos   deleteTodo={this.deleteTodo} \n                            task={todo.task} \n                            id={todo.id} \n                            stateLength={this.state.todos.length} \n                            updateTodo={this.updateTodo}\n                            key={todo.id}/>})\n\n        return (\n        <div className=\"container\">\n                <h1>Todo List</h1>\n                <SubmitButton createTodo={this.createTodo}/>\n                <ul>{tasks}</ul>\n\n        </div>\n        )\n    }\n}\n \nexport default List;","import './App.css';\nimport List from \"./List\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <List />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}